{"version":3,"sources":["./src/app/components/sidenav/sidenav.component.ts","./src/app/components/sidenav/sidenav.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth-routing/auth-routing.module.ts","./src/app/modules/alta-main-routing/alta-main-routing.module.ts","./src/environments/environment.ts","./src/app/modules/alta-main/alta-main.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/manage-organizations.service.ts","./src/app/modules/material/material-module.ts","./src/app/components/sidenav/sidenavListing.ts","./src/app/components/greeting/greeting.component.ts","./src/app/components/greeting/greeting.component.html","./src/app/components/manage-organizations/manage-organizations.component.ts","./src/app/components/manage-organizations/manage-organizations.component.html","./src/app/components/manage-organizations/organization-dialog.html","./src/app/components/create-member/create-member.component.ts","./src/app/components/create-member/create-member.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/client-gridview/client-gridview.component.ts","./src/app/components/client-gridview/client-gridview.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/manage-inventory-items/manage-inventory-items.component.ts","./src/app/components/manage-inventory-items/manage-inventory-items.component.html","./src/app/services/sidenav.service.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/services/manage-members.service.ts","./src/app/services/auth.service.ts","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/services/manage-inventory-items.service.ts","./src/app/services/token.service.ts","./src/app/components/employee-settings/employee-settings.component.ts","./src/app/components/employee-settings/employee-settings.component.html","./src/app/services/token-interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SideNavOption } from './sidenavOption';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SystemNavListings, OrganizationNavListings } from './sidenavListing';\nimport {NavigationEnd, NavigationStart, Router} from '@angular/router';\nimport { TokenService } from '../../services/token.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SideNavComponent implements OnInit {\n  // contains the listing of all sidenav menu items\n  options = SystemNavListings;\n  // contains the last option chosen, it defaults to the first\n  selectedOption: SideNavOption;\n\n  authSubscription;\n  routeSubscription;\n  loggedInUser;\n  loggedInUserRole;\n\n  roles = {\n    SA: 'System Administrator',\n    IM: 'Inventory Manager',\n    SK: 'Stock Keeper'\n  };\n\n  constructor(private router: Router,\n              private authService: AuthService,\n              private tokenService: TokenService) { }\n\n  ngOnInit(): void {\n    this.authSubscription = this.authService.getOrgMode().subscribe(orgMode => {\n      if (orgMode) {\n        this.options = OrganizationNavListings;\n      } else {\n        this.options = SystemNavListings;\n      }\n    });\n    this.authSubscription = this.authService.sharedUser\n      .subscribe((data) => {\n        this.loggedInUser = data.username;\n        this.loggedInUserRole = this.roles[data.role];\n      });\n    this.setSelected(this.router.url);\n    this.subscribeSelected();\n  }\n\n  exitOrg(): void {\n    this.authService.turnOffOrgMode();\n  }\n\n  logout(): void {\n    this.tokenService.DeleteToken(); // Delete token when user logout\n    this.authService.setLogOut();   // Extra step - sets the sharedUser data to ''\n    this.router.navigate(['login']); // Redirect user to login/register pager\n    // TODO: Check out if we want to delete also the token from the db, in order to regenerate a new one while logging in\n  }\n\n  subscribeSelected(): void {\n    this.routeSubscription = this.router.events.subscribe(value => {\n      if (value instanceof NavigationEnd) {\n        this.setSelected(value.url);\n      }\n      if (value instanceof NavigationStart && value.navigationTrigger === 'popstate') {\n        const inNavOptions = this.checkInSelection(value.url);\n        if (!inNavOptions) {\n          if (this.authService.getOrgMode().getValue()) {\n            this.authService.setOrgMode(false);\n            this.options = SystemNavListings;\n          } else {\n            this.authService.setOrgMode(true);\n            this.options = OrganizationNavListings;\n          }\n        }\n      }\n    });\n\n  }\n\n  setSelected(url): void {\n    this.options.forEach(navOption => {\n      if ('/' + navOption.routerLink === url) {\n        this.selectedOption = navOption;\n        return;\n      }\n    });\n  }\n\n  checkInSelection(url): boolean {\n    let found = false;\n    this.options.forEach(navOption => {\n      if ('/' + navOption.routerLink === url) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  onDestroy(): void {\n    this.authSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n}\n","<div class=\"header\" (click)=\"exitOrg()\">\n  <img id=\"alta_logo\" class=\"pic\" src=\"assets/img/logo.svg\" width=\"150\" height=\"80\">\n</div>\n<div class=\"sidenav\">\n    <div class=\"options\">\n\n        <div *ngFor=\"let option of options\" [class.selected]=\"option === selectedOption\" class=\"parent\">\n            <div id=\"option\" routerLink=\"{{option.routerLink}}\" class=\"option-tab\">{{option.title}}</div>\n        </div>\n      <div class=\"footer\">\n        <mat-list>\n          <mat-list-item [matMenuTriggerFor]=\"menu\">\n            <img matListAvatar src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n                 alt=\"Blank Display Pic\" width=\"20\" height=\"20\" />\n            <h3 matLine class=\"text-color\">{{loggedInUser}}</h3>\n            <p matLine>\n              <span class=\"small-text\"> {{loggedInUserRole}} </span>\n            </p>\n            <mat-icon>expand_more</mat-icon>\n          </mat-list-item>\n        </mat-list>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"logout()\">\n            <span>Logout</span>\n          </button>\n        </mat-menu>\n      </div>\n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GreetingComponent } from '../../components/greeting/greeting.component';\nimport { LoginComponent } from 'src/app/components/login/login.component';\nimport { CreateMemberComponent } from 'src/app/components/create-member/create-member.component';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatModule } from '../material/material-module';\nimport {FlexModule} from '@angular/flex-layout';\n@NgModule({\n  declarations: [GreetingComponent, LoginComponent, CreateMemberComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        RouterModule,\n        MatModule,\n        FlexModule,\n    ],\n  exports: [GreetingComponent, LoginComponent, CreateMemberComponent],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GreetingComponent } from 'src/app/components/greeting/greeting.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: GreetingComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from 'src/app/components/dashboard/dashboard.component';\nimport { HomeComponent } from 'src/app/components/home/home.component';\nimport { ManageOrganizationsComponent } from 'src/app/components/manage-organizations/manage-organizations.component';\nimport { AuthGuard } from '../../guards/auth.guard';\nimport { EmployeeSettingsComponent } from '../../components/employee-settings/employee-settings.component';\nimport { ClientGridviewComponent } from '../../components/client-gridview/client-gridview.component';\nimport { CreateMemberComponent } from '../../components/create-member/create-member.component';\nimport { ManageInventoryItemsComponent } from 'src/app/components/manage-inventory-items/manage-inventory-items.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuard], // If user has a valid token he will be able to access comment page\n    children: [\n      {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full',\n      },\n      { path: 'dashboard', component: DashboardComponent },\n      { path: 'create-members', component: CreateMemberComponent },\n      { path: 'modify-members', component: ClientGridviewComponent },\n      { path: 'sa-modify-members', component: ClientGridviewComponent },\n      { path: 'manage-organizations', component: ManageOrganizationsComponent },\n      { path: 'modify-members/:ID', component: EmployeeSettingsComponent },\n      { path: 'settings', component: EmployeeSettingsComponent },\n      { path: 'sa-settings', component: EmployeeSettingsComponent },\n      { path: 'manage-items', component: ManageInventoryItemsComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AltaMainRoutingModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const env = {\n  production: false,\n  api_root: 'http://localhost:8000',\n  open_registration: false, // Set to 'true' to allow registartion from the greeting page\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { HomeComponent } from 'src/app/components/home/home.component';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DashboardComponent } from 'src/app/components/dashboard/dashboard.component';\nimport { SideNavComponent } from 'src/app/components/sidenav/sidenav.component';\nimport { MatModule } from '../material/material-module';\nimport { ToolbarComponent } from 'src/app/components/toolbar/toolbar.component';\nimport { AuthModule } from '../auth/auth.module';\nimport { ClientGridviewComponent } from 'src/app/components/client-gridview/client-gridview.component';\nimport {\n  ManageOrganizationsComponent,\n  OrganizationDialogComponent,\n} from 'src/app/components/manage-organizations/manage-organizations.component';\nimport { ManageMembersService } from 'src/app/services/manage-members.service';\nimport { FormsModule } from '@angular/forms';\nimport { EmployeeSettingsComponent } from '../../components/employee-settings/employee-settings.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ManageInventoryItemsComponent } from '../../components/manage-inventory-items/manage-inventory-items.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    ToolbarComponent,\n    DashboardComponent,\n    SideNavComponent,\n    ClientGridviewComponent,\n    ManageOrganizationsComponent,\n    EmployeeSettingsComponent,\n    OrganizationDialogComponent,\n    ManageInventoryItemsComponent,\n  ],\n\n  imports: [\n    CommonModule,\n    MatModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    AuthModule,\n    FormsModule,\n    MatMenuModule,\n    MatDialogModule,\n  ],\n  providers: [AuthService, ManageMembersService, ManageOrganizationsComponent],\n})\nexport class AltaMainModule {}\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { TokenService } from 'src/app/services/token.service';\nimport { Router } from '@angular/router';\nimport { SidenavService } from 'src/app/services/sidenav.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnDestroy, AfterViewInit, OnInit {\n  mobileQuery: MediaQueryList;\n  private mobileQueryListener: () => void;\n  @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private tokenService: TokenService,\n    private router: Router,\n    private sidenavService: SidenavService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addEventListener('change', this.mobileQueryListener);\n  }\n\n  ngOnInit(): void { }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeEventListener('change', this.mobileQueryListener);\n  }\n\n  ngAfterViewInit(): void {\n    this.sidenavService.setSidenav(this.sidenav);\n  }\n}\n","<div class=\"main-container\" [class.is-mobile]=\"mobileQuery.matches\">\n\n    <mat-sidenav-container class=\"sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n\n        <mat-sidenav #sidenav opened=\"true\" [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n            [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\" class=\"side-nav\">\n            <app-sidenav></app-sidenav>\n        </mat-sidenav>\n\n        <div role=\"main\" class=\"main-body\">\n          <app-toolbar></app-toolbar>\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-container>\n</div>\n","import { env } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// Connection with the backend\nconst BASEURL = env.api_root;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManageOrganizationsService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllOrganizations(): Observable<any> {\n    return this.http.get(`${BASEURL}/organization/`);\n  }\n\n  getOneOrganization(id): Observable<any> {\n    return this.http.get(`${BASEURL}/organization/${id}/`);\n  }\n\n  updateOrganization(organization): Observable<any> {\n    const body = { org_name: organization.org_name };\n    return this.http.put(`${BASEURL}/organization/${organization.org_id}/`, body);\n  }\n\n  createOrganization(organization): Observable<any> {\n    const body = { org_name: organization.org_name };\n    return this.http.post(`${BASEURL}/organization/`, body);\n  }\n\n  deleteOrganization(id): Observable<any> {\n    return this.http.delete(`${BASEURL}/organization/${id}/`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material';\nimport { MatPaginatorModule } from '@angular/material/';\nimport { MatTableModule } from '@angular/material/';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatTabsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatDividerModule,\n    MatListModule,\n    MatGridListModule\n  ],\n  providers: [],\n  exports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatTabsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatDividerModule,\n    MatListModule,\n    MatGridListModule\n  ]\n})\nexport class MatModule { }\n","import { SideNavOption } from './sidenavOption';\n\nconst settings: SideNavOption = {\n  title: 'Settings',\n  routerLink: 'settings',\n  subMenuOptions: [],\n};\n\n// These are the menu options listed that can be chosen from the sidenav menu\nexport const SystemNavListings: SideNavOption[] = [\n  {\n    title: 'Manage Organizations',\n    routerLink: 'manage-organizations',\n    subMenuOptions: [],\n  },\n  {\n    title: 'Manage Members',\n    routerLink: 'sa-modify-members',\n    subMenuOptions: [],\n  },\n  {\n    title: 'Settings',\n    routerLink: 'sa-settings',\n    subMenuOptions: [],\n  },\n];\n\nexport const OrganizationNavListings: SideNavOption[] = [\n  { title: 'Dashboard', routerLink: 'dashboard', subMenuOptions: [] },\n  { title: 'Audits', routerLink: 'audits', subMenuOptions: [] },\n  {\n    title: 'Template',\n    routerLink: 'template',\n    subMenuOptions: [],\n  },\n  {\n    title: 'Employees',\n    routerLink: 'modify-members',\n    subMenuOptions: [],\n  },\n  {\n    title: 'Inventory Items',\n    routerLink: 'manage-items',\n    subMenuOptions: [],\n  },\n  {\n    title: 'Settings',\n    routerLink: 'settings',\n    subMenuOptions: [],\n  },\n];\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport { env } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-greeting',\n  templateUrl: './greeting.component.html',\n  styleUrls: ['./greeting.component.scss'],\n})\nexport class GreetingComponent implements OnInit, OnDestroy, AfterViewInit{\n\n  openRegistraion: boolean = env.open_registration;\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    document.querySelector('body').classList.add('greeting');\n  }\n\n  ngOnDestroy(): void {\n    document.querySelector('body').classList.remove('greeting');\n  }\n}\n","\n\n<div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\n    <div class=\"logo-img\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\n      <img mat-card-image src=\"assets/img/logo.svg\">\n    </div>\n</div>\n\n\n<div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"center center\">\n\n  <div class=\"login-form\" fxFlex=\"50%\">\n\n    <div id='loginOnly' *ngIf=\"!openRegistraion\">\n      <app-login></app-login>\n    </div>\n\n    <div id=loginWithRegistration *ngIf=\"openRegistraion\">\n      <mat-tab-group mat-align-tabs=\"center\">\n        <mat-tab label=\"Login\">\n          <app-login></app-login>\n        </mat-tab>\n        <mat-tab label=\"Register\">\n          <app-signup></app-signup>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n\n</div>\n\n</div>\n\n","import {Component, Inject, OnInit, Optional} from '@angular/core';\nimport { ManageOrganizationsService } from 'src/app/services/manage-organizations.service';\n\nimport {AuthService} from '../../services/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { Organization } from '../../models/organization';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\ninterface DialogData {\n  textInput: string;\n  placeholder: string;\n  title: string;\n  buttonDesc: string;\n}\n\n@Component({\n  selector: 'app-manage-organizations',\n  templateUrl: './manage-organizations.component.html',\n  styleUrls: ['./manage-organizations.component.scss'],\n})\nexport class ManageOrganizationsComponent implements OnInit {\n  organizations = [];\n  selectedOrganization;\n  errorMessage = '';\n\n  constructor(private organizationsService: ManageOrganizationsService,\n              private fb: FormBuilder,\n              private authService: AuthService,\n              public dialog: MatDialog) {}\n  dataSource: MatTableDataSource<Organization>;\n  displayedColumns: string[] = ['1', 'Company_name', 'Activated_On', 'Status', 'Address', '2'];\n  filterTerm: string;\n  selected = 'All';\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.getAllOrganizations();\n    this.selectedOrganization = { org_id: -1, org_name: '', status: '' };\n    this.errorMessage = '';\n  }\n\n  getAllOrganizations(): void {\n    this.organizationsService.getAllOrganizations().subscribe(\n      (data) => {\n        this.organizations = data;\n        this.errorMessage = '';\n        this.dataSource = new MatTableDataSource(this.organizations);\n      },\n      (err) => {\n        this.errorMessage = err;\n      }\n    );\n  }\n\n  organizationClicked(organization): void {\n    this.organizationsService.getOneOrganization(organization.org_id).subscribe(\n      (data) => {\n        this.selectedOrganization = data;\n        this.errorMessage = '';\n      },\n      (err) => {\n        this.errorMessage = err;\n      }\n    );\n  }\n\n  updateOrganization(organization): void {\n    this.organizationsService.updateOrganization(organization).subscribe(\n      (data) => {\n        this.getAllOrganizations();\n        this.errorMessage = '';\n      },\n      (err) => {\n        this.errorMessage = err.error.org_name;\n      }\n    );\n  }\n\n  preventPropagation(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  openUpdateOrgDialog(organization): void {\n    const dialogRef = this.dialog.open(OrganizationDialogComponent, {\n      width: '250px',\n      data: {\n        textInput: organization.org_name,\n        placeholder: 'Edit Organization',\n        title: 'Edit Organization',\n        buttonDesc: 'Update'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result !== organization.org_name) {\n        this.updateOrganization({...organization, org_name: result});\n      }\n    });\n  }\n\n  createOrganization(orgName: string): void {\n    this.organizationsService.createOrganization({org_name: orgName}).subscribe(\n      (data) => {\n        this.organizations.push(data);\n        this.getAllOrganizations();\n        this.errorMessage = '';\n      },\n      (err) => {\n        if (err.error.org_name) {\n          this.errorMessage = err.error.org_name;\n        }\n\n        if (err.error.detail) {\n          this.errorMessage = err.error.detail;\n        }\n      }\n    );\n  }\n\n  deleteOrganization(organization): void {\n    this.organizationsService.deleteOrganization(organization.org_id).subscribe(\n      (data) => {\n        this.getAllOrganizations();\n        this.errorMessage = '';\n      },\n      (err) => {\n        this.errorMessage = err.error.detail;\n      }\n    );\n  }\n\n  openDeleteDialog(organization): void {\n    const dialogRef = this.dialog.open(OrganizationDialogComponent, {\n      width: '400px',\n      data: {\n        textInput: '',\n        placeholder: 'Organization Name',\n        title: 'Please type the name of the organization to validate deletion.',\n        buttonDesc: 'Delete'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result === organization.org_name) {\n        this.deleteOrganization(organization);\n      }\n    });\n  }\n\n  openCreateDialog(): void {\n    const dialogRef = this.dialog.open(OrganizationDialogComponent, {\n      width: '250px',\n      data: {\n        textInput: '',\n        placeholder: 'Enter Organization',\n        title: 'Organization',\n        buttonDesc: 'Create'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.createOrganization(result);\n      }\n    });\n  }\n\n  turnOnOrgMode(organization): void {\n    this.authService.turnOnOrgMode({organization: organization.org_id, organization_name: organization.org_name});\n  }\n\n\n  applyFilter(filterTerm: string): void {\n    this.dataSource.filter = filterTerm;\n  }\n}\n\n\n@Component({\n  selector: 'app-organization-dialog',\n  templateUrl: 'organization-dialog.html',\n})\nexport class OrganizationDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<OrganizationDialogComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n}\n","<mat-card>\n    <button mat-stroked-button  id=\"create\" class=\"create\" (click)=\"openCreateDialog()\">Add</button>\n    <mat-card-title>Organizations</mat-card-title>\n    <div class=\"example-button-container\">\n      <button mat-icon-button disabled aria-label=\"Example icon button with a home icon\">\n        <mat-icon>search</mat-icon>\n      </button>\n    </div>\n  <div class=\"search-header\">\n      <mat-form-field appearance=\"fill\">\n        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search Organizations\">\n      </mat-form-field>\n  </div>\n  <mat-label class=\"moveMeRight\">Show: </mat-label>\n  <div class=\"dropdown\">\n    <mat-form-field appearance=\"standard\">\n        <mat-select [(value)]=\"selected\" aria-selected=\"true\">\n          <mat-option value=\"All\">All</mat-option>\n        </mat-select>\n      </mat-form-field>\n  </div>\n    <mat-divider></mat-divider>\n    <div >\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"1\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\n            <td mat-cell *matCellDef=\"let row\"> pic </td>\n          </ng-container>\n\n        <ng-container matColumnDef=\"Company_name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Company name </th>\n          <td class=\"cell_org_name\" classmat-cell *matCellDef=\"let row\"> {{row.org_name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Activated_On\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Activated On </th>\n          <td mat-cell *matCellDef=\"let row\"> Active </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Status\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n          <td class=\"cell_org_status\" mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Address\">\n          <th mat-header-cell *matHeaderCellDef> Address</th>\n          <td class=\"cell_org_address\" mat-cell *matCellDef=\"let row\">Montreal, QC</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"2\" >\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\n            <td mat-cell *matCellDef=\"let row\" [matMenuTriggerFor]=\"menu\" (click)=\"preventPropagation($event)\">\n              <mat-menu #menu=\"matMenu\">\n                <button class=\"org_mat_menu_item_update\" mat-menu-item (click)=\"openUpdateOrgDialog(row)\">\n                  <span>Update</span>\n                </button>\n                <button class=\"org_mat_menu_item_delete\" mat-menu-item (click)=\"openDeleteDialog(row)\">\n                  <span>Delete</span>\n                </button>\n              </mat-menu>\n                <div class=\"example-button-container\">\n                    <button mat-icon-button mat-button>\n                      <mat-icon>more_vert</mat-icon>\n                    </button>\n                  </div>\n            </td>\n          </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"turnOnOrgMode(row)\"></tr>\n      </table>\n\n      <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\n    </div>\n  </mat-card>\n","<h1 mat-dialog-title>{{data.title}}</h1>\n\n<div mat-dialog-content>\n  <mat-form-field>\n    <mat-label>{{data.placeholder}}</mat-label>\n    <input matInput [(ngModel)]=\"data.textInput\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-stroked-button [mat-dialog-close]=\"data.textInput\" cdkFocusInitial>{{data.buttonDesc}}</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './create-member.component.html',\n  styleUrls: ['./create-member.component.scss'],\n})\nexport class CreateMemberComponent implements OnInit {\n  // Defining type of our form\n  signupForm: FormGroup;\n  errorMessage: string;\n  body: any;\n  selectedOrganization: any = '';\n  signUpButtonLabel = 'Save';\n  subscription;\n  roles = [\n    { name: 'Inventory Manager', abbrev: 'IM' },\n    { name: 'Stock Keeper', abbrev: 'SK' },\n  ];\n  showRoles = false;\n\n  // Injecting the authService to be able to send data to the backend through it ,\n  // fb for the formbuilder validations and Router to redirect to the desired component when registerd successfully\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenService: TokenService\n  ) { }\n\n  ngOnInit(): void {\n    this.subscription = this.authService.getOrgMode()\n      .subscribe(orgMode => {\n        if (orgMode) {\n          this.selectedOrganization = localStorage.getItem('organization_id');\n          this.showRoles = true;\n        }\n        this.init();\n      });\n  }\n\n  // We initialize the form and set validators to each one in case user forget to specify a field\n  init(): void {\n    this.signupForm = this.fb.group({\n      username: ['', Validators.required], // Each username,email,password is piped from the HTML using the \"formControlName\"\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', Validators.required],\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      role: this.showRoles ? ['', Validators.required] : undefined,\n    });\n  }\n\n  signupUser(): void {\n\n    this.body = {\n      user_name: this.signupForm.value.username,\n      email: this.signupForm.value.email,\n      first_name: this.signupForm.value.firstname,\n      last_name: this.signupForm.value.lastname,\n      role: this.signupForm.value.role?.abbrev ? this.signupForm.value.role.abbrev : 'SA',\n      is_active: 'true',\n      password: this.signupForm.value.password,\n      organization: this.selectedOrganization,\n    };\n    // RegisterUser is the method defined in authService\n    // If you are not logged in you can create any account\n    const register = this.tokenService.GetToken()\n      ? this.authService.register(this.body)\n      : this.authService.openRegister(this.body);\n\n    register.subscribe(\n      () => {\n        this.signupForm.reset(); // Reset form once create-member\n        setTimeout(() => {\n          // Redirect user to component in path:home (defined in alta-home-routing.module.ts)\n          this.router.navigate(['modify-members']);\n        }, 1000); // Waiting 1 second before redirecting the user\n        this.resetForm();\n\n      },\n      (err) => {\n        // 2 different types of error messages\n        // If email already exist\n        if (err.error.email) {\n          this.errorMessage = err.error.email[0];\n        }\n\n        // If username already exist\n        if (err.error.user_name) {\n          this.errorMessage = err.error.user_name[0];\n        }\n      }\n    );\n  }\n\n  resetForm(): void {\n    this.signupForm.reset();\n    Object.keys(this.signupForm.controls).forEach(key => {\n      this.signupForm.controls[key].setErrors(null);\n    });\n  }\n\n  OnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>Profile Creation</mat-card-title>\n    <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n      <mat-card-subtitle>{{ errorMessage }}</mat-card-subtitle>\n    </div>\n  </mat-card-header>\n  <mat-divider></mat-divider>\n  <form class=\"col s12\" [formGroup]=\"signupForm\" novalidate (ngSubmit)=\"signupUser()\">\n  <mat-card-content>\n    <button mat-stroked-button id=\"signupbtn\" [disabled]=\"!signupForm.valid\" class=\"save\">\n      {{signUpButtonLabel}}</button><!-- if checks throws error then do not send data -->\n    <div class=\"centerMe\">\n    <img src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\" alt=\"Blank Display Pic\" width=\"100\" height=\"100\" />\n    </div>\n      <mat-grid-list cols=\"2\" rowHeight=\"38:9\">\n        <mat-grid-tile>\n          <div class=\"form-group\">\n            <mat-label for=\"power\">First Name:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <input matInput id=\"firstname\" type=\"text\" formControlName=\"firstname\"placeholder=\"First name\"/>\n              <mat-error class=\"error\" *ngIf=\"\n                  !signupForm.controls['firstname'].valid &&\n                  signupForm.controls['firstname'].touched\n                \">\n                <!-- Handeling error -->\n                Firstname is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <div class=\"form-group\">\n            <mat-label for=\"power\">E-mail address:</mat-label>\n          <mat-form-field appearance=\"outline\">\n            <input matInput id=\"email\" type=\"email\" formControlName=\"email\" placeholder=\"E-mail address\"/>\n            <mat-error class=\"error\" *ngIf=\"\n                !signupForm.controls['email'].valid &&\n                signupForm.controls['email'].touched\n              \">\n              <!-- Handeling error -->\n              Email is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <div class=\"form-group\">\n          <mat-label for=\"lastname\">Last name:</mat-label>\n          <mat-form-field appearance=\"outline\">\n            <input matInput id=\"lastname\" type=\"text\" formControlName=\"lastname\" placeholder=\"Last name\"/>\n            <mat-error class=\"error\" *ngIf=\"\n                !signupForm.controls['lastname'].valid &&\n                signupForm.controls['lastname'].touched\n              \">\n              <!-- Handeling error -->\n              lastname is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <div class=\"form-group\">\n            <mat-label for=\"username\">Employee ID:</mat-label>\n          <mat-form-field appearance=\"outline\">\n            <input matInput id=\"user_name\" type=\"text\" formControlName=\"username\" placeholder=\"Employee ID\"/>\n            <mat-error class=\"error\" *ngIf=\"\n                !signupForm.controls['username'].valid &&\n                signupForm.controls['username'].touched\n              \">\n              <!-- Handeling error -->\n              Username is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <div class=\"form-group\">\n            <mat-label for=\"pass-word\">Password:</mat-label>\n          <mat-form-field appearance=\"outline\">\n            <input matInput id=\"pass-word\" type=\"password\" formControlName=\"password\" placeholder=\"Password\"/>\n            <mat-error class=\"error\" *ngIf=\"\n                !signupForm.controls['password'].valid &&\n                signupForm.controls['password'].touched\n              \">\n              <!-- Handeling error -->\n              Password is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        </mat-grid-tile>\n        <mat-grid-tile *ngIf=\"showRoles\">\n          <div class=\"form-group\">\n            <mat-label for=\"pass-word\">Role:</mat-label>\n            <mat-form-field appearance=\"outline\">\n          <mat-select class=\"roleDropDown\" formControlName=\"role\">\n            <mat-option value=\"\">Choose a role</mat-option>\n            <mat-option *ngFor=\"let role of roles\" [value]=\"role\">\n              {{ role.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </mat-card-content>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  constructor() { }\n\n  view = 'Dashboard';\n\n  ngOnInit(): void {\n  }\n}\n","<p>Inside {{view}} Component</p>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { ManageMembersService } from 'src/app/services/manage-members.service';\n\n@Component({\n  selector: 'app-client-gridview',\n  templateUrl: './client-gridview.component.html',\n  styleUrls: ['./client-gridview.component.scss']\n})\n\nexport class ClientGridviewComponent implements OnInit {\n  view = 'Client Gridview';\n  users: Array<User>;\n\n  dataSource: MatTableDataSource<User>;\n  displayedColumns: string[] = ['First_Name', 'Last_Name', 'Status', 'Settings'];\n  filterTerm: string;\n  selected = 'All';\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private manageMembersService: ManageMembersService,\n    private changeDetectorRefs: ChangeDetectorRef) {\n    this.users = new Array<User>();\n    this.manageMembersService.getAllClients()\n    .subscribe((user) => {\n      const users = user;\n      this.populateTable(users);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  applyFilter(filterTerm: string): void {\n    this.dataSource.filter = filterTerm;\n  }\n\n  populateTable(clients): void {\n    clients.forEach(element => {\n      this.users.push(element);\n    });\n    this.dataSource = new MatTableDataSource(this.users);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.paginator._intl.itemsPerPageLabel = 'Rows per page:';\n    this.dataSource.sort = this.sort;\n    this.changeDetectorRefs.detectChanges();\n  }\n}\n","<mat-card>\n  <button mat-stroked-button  id=\"create\" class=\"create\" routerLink=\"/create-members\">Create</button>\n  <mat-card-title>Employees</mat-card-title>\n  <div class=\"example-button-container\">\n    <button mat-icon-button disabled aria-label=\"Example icon button with a home icon\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </div>\n<div class=\"search-header\">\n    <mat-form-field appearance=\"fill\">\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search Employees\">\n    </mat-form-field>\n</div>\n<mat-label class=\"moveMeRight\">Show: </mat-label>\n<div class=\"dropdown\">\n  <mat-form-field appearance=\"standard\">\n      <mat-select [(value)]=\"selected\" aria-selected=\"true\">\n        <mat-option value=\"All\">All</mat-option>\n      </mat-select>\n    </mat-form-field>\n</div>\n  <mat-divider></mat-divider>\n  <div >\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"First_Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\n        <td class=\"cell_first_name\" mat-cell *matCellDef=\"let row\"> {{row.first_name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Last_Name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n        <td class=\"cell_last_name\" mat-cell *matCellDef=\"let row\"> {{row.last_name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n        <td class=\"cell_is_active\" mat-cell *matCellDef=\"let row\"> {{row.is_active}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Settings\">\n        <th mat-header-cell *matHeaderCellDef> Settings</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <a class=\"cell_settings\" [routerLink]=\"['/modify-members', row.id]\">\n            <span class=\"dot\"></span>\n          </a>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\n  </div>\n</mat-card>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'alta-front';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenService } from '../services/token.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private tokenService: TokenService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const token = this.tokenService.GetToken();\n    // If the token exist\n    if (token) {\n      return true;\n    } else {\n      this.router.navigate(['login']); // If no token exist redirect user to login/register page\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  body: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private tokenService: TokenService\n  ) { }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  init(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  loginUser(): void {\n    this.body = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password,\n    };\n\n    this.authService.login(this.body).subscribe(\n      (data) => {\n        this.tokenService.SetToken(data.token); // Setting token in cookie for logged in users\n        // Set the logged in user's data for components to use when hiding or displaying elements\n        this.authService.setNext(data.user_id, data.user, data.role, data.organization_id, data.organization_name);\n        if (data.role === 'SA') {\n          setTimeout(() => {\n            this.authService.turnOffOrgMode();\n            this.router.navigate(['manage-organizations']);\n          }, 1000);\n        } else {\n          setTimeout(() => {\n            this.authService.turnOnOrgMode({organization: data.organization_id, ...data});\n            this.router.navigate(['']); // Redirect user to component in path:home (defined in alta-home-routing.module.ts)\n          }, 1000); // Redirect the user after 1 seconds ( in case we want to add a loading bar when we click on button )\n        }\n        this.successMessage = 'Login Successful';\n        this.errorMessage = null;\n        this.resetForm();\n      },\n      (err) => {\n        if (err.error.detail) {\n          this.errorMessage = err.error.detail;\n        }\n      }\n    );\n  }\n\n  resetForm(): void {\n    this.loginForm.reset();\n    Object.keys(this.loginForm.controls).forEach((key) => {\n      this.loginForm.controls[key].setErrors(null);\n    });\n  }\n}\n","<div class=\"login\" fxLayoutAlign=\"center\">\n\n<mat-card class=\"login-card\">\n  <mat-card-header>\n<!--    <mat-card-title>Login</mat-card-title>-->\n    <div id=\"loginStatus\">\n      <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n        <mat-card-subtitle>{{ errorMessage }}</mat-card-subtitle>\n      </div>\n      <div id=\"successMsg\" *ngIf=\"successMessage\">\n        <mat-card-subtitle>{{ successMessage }}</mat-card-subtitle>\n      </div>\n    </div>\n  </mat-card-header>\n\n  <mat-card-content>\n    <form class=\"col s12\" [formGroup]=\"loginForm\" novalidate (ngSubmit)=\"loginUser()\">\n      <mat-form-field appearance=\"legacy\" class=\"input\">\n        <mat-label for=\"email\">E-mail address</mat-label>\n        <input matInput id=\"email\" type=\"text\" formControlName=\"email\" />\n\n        <mat-error class=\"error\" *ngIf=\"\n            loginForm.controls['email'].errors?.required &&\n            loginForm.controls['email'].touched\n          \">\n          <!-- Handeling error -->\n          Email is required\n        </mat-error>\n\n        <mat-error class=\"error\" *ngIf=\"\n            loginForm.controls['email'].errors?.email &&\n            !loginForm.controls['email'].errors?.required &&\n            loginForm.controls['email'].touched\n          \">\n          <!-- Handeling error -->\n          Email format is not valid\n        </mat-error>\n\n      </mat-form-field>\n\n      <mat-form-field appearance=\"legacy\" class=\"input\">\n        <mat-label for=\"password\">Password</mat-label>\n        <input matInput id=\"password\" type=\"password\" formControlName=\"password\" />\n        <mat-error class=\"error\" *ngIf=\"\n            !loginForm.controls['password'].valid &&\n            loginForm.controls['password'].touched\n          \">\n          <!-- Handeling error -->\n          Password is required\n        </mat-error>\n      </mat-form-field>\n      <br />\n      <button mat-raised-button id=\"loginbtn\" color=\"accent\" [disabled]=\"!loginForm.valid\">\n        Login\n      </button>\n    </form>\n  </mat-card-content>\n</mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { AltaMainModule } from './modules/alta-main/alta-main.module';\nimport { AltaMainRoutingModule } from './modules/alta-main-routing/alta-main-routing.module';\nimport { AuthRoutingModule } from './modules/auth-routing/auth-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './services/token-interceptor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatModule } from './modules/material/material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AuthModule,\n    AltaMainModule,\n    AltaMainRoutingModule,\n    AuthRoutingModule,\n    HttpClientModule,\n    MatModule,\n    FlexLayoutModule,\n    IonicModule.forRoot(),\n  ],\n  providers: [\n    CookieService, // To manage cookie in frontend\n    {\n      provide: HTTP_INTERCEPTORS, // To be able to use the http interceptor in app\n      useClass: TokenInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ManageInventoryItemsService } from 'src/app/services/manage-inventory-items.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-inventory-items',\n  templateUrl: './manage-inventory-items.component.html',\n  styleUrls: ['./manage-inventory-items.component.scss'],\n})\nexport class ManageInventoryItemsComponent implements OnInit {\n  items = [];\n  errorMessage = '';\n\n  constructor(private itemsService: ManageInventoryItemsService) {}\n\n  dataSource: MatTableDataSource<any>;\n  displayedColumns: string[] = [];\n  filterTerm: string;\n  selected = 'All';\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.getAllItems();\n  }\n\n  getAllItems(): void {\n    this.itemsService.getAllItems().subscribe(\n      (data) => {\n        // Getting the field name of the item object returned and populating the column of the table\n        for (const key in data[0]) {\n          if (key != null) {\n            this.displayedColumns.push(key);\n          }\n        }\n        this.items = data;\n        this.errorMessage = '';\n        this.dataSource = new MatTableDataSource(this.items);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.paginator._intl.itemsPerPageLabel = 'Rows per page:';\n        this.dataSource.sort = this.sort;\n      },\n      (err) => {\n        this.errorMessage = err;\n      }\n    );\n  }\n}\n","<mat-card>\n    <mat-card-title>Inventory Items</mat-card-title>\n    <mat-divider></mat-divider>\n    <div >\n      <table mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\" matSort >\n      \n          <ng-container *ngFor=\"let column of displayedColumns\" [matColumnDef]=\"column\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ column }}</th>\n            <td mat-cell  *matCellDef=\"let object\">{{ object[column]}}</td>\n          </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row  *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n  \n      <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\n    </div>\n  </mat-card>\n  ","// Managing tokens in the frontend using cookies\nimport { Injectable } from '@angular/core';\nimport { MatDrawerToggleResult, MatSidenav } from '@angular/material/sidenav';\n\n@Injectable({\n  providedIn: 'root',\n})\n@Injectable()\nexport class SidenavService {\n  private sidenav: MatSidenav;\n\n  public setSidenav(sidenav: MatSidenav): void {\n    this.sidenav = sidenav;\n  }\n\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { env } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport {AuthService} from './auth.service';\n\ninterface Body {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ManageMembersService {\n  // Connection with the backend\n  BASEURL = env.api_root;\n\n  constructor(private http: HttpClient, // We inject the http client in the constructor to do our REST operations\n              private authService: AuthService) {}\n\n  getAllClients(): Observable<any> {\n    if (this.authService.getOrgMode().getValue()) {\n      return this.http.get(`${this.BASEURL}/user/`,\n        {params: {organization: localStorage.getItem('organization_id')}});\n    } else {\n      return this.http.get<User[]>(`${this.BASEURL}/accessClients/`).pipe(\n        catchError((err: HttpErrorResponse) => {\n          console.error(`Error: ${err.status}: ${err.error}`);\n          return EMPTY; // TODO: Implement proper error handling\n        })\n      );\n    }\n\n  }\n\n  updateClientInfo(employee, id): Observable<any> {\n    return this.http.patch(`${this.BASEURL}/user/${id}/`, employee);\n  }\n\n  updatePassword(password, id): Observable<any> {\n    return this.http.put(`${this.BASEURL}/user/${id}/`, password);\n  }\n\n  getEmployee(id): Observable<any> {\n    return this.http.get(`${this.BASEURL}/user/${id}/`);\n  }\n}\n","import { env } from 'src/environments/environment';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { map,  debounceTime } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n// Connection with the backend\nconst BASEURL = env.api_root;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  private userId = new BehaviorSubject('');\n  private username = new BehaviorSubject('');\n  private role = new BehaviorSubject('');\n  private organizationId = new BehaviorSubject('');\n  private organization = new BehaviorSubject('');\n\n  orgMode: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(!!localStorage.getItem('organization_id'));\n\n  subscription;\n\n  // Access Observables through mapped data\n  sharedUser = combineLatest([this.userId.asObservable(),\n                             this.username.asObservable(),\n                             this.role.asObservable(),\n                             this.organizationId.asObservable(),\n                             this.organization.asObservable()])\n                             .pipe(map(([userId, username, role, orgId, org]) => {\n                                return {\n                                  userId: this.userId.value,\n                                  username: this.username.value,\n                                  role: this.role.value,\n                                  orgId: this.organizationId.value,\n                                  org: this.organization.value\n                                };\n                             }), debounceTime(0));\n\n  constructor(private http: HttpClient, // We inject the http client in the constructor to do our REST operations\n              private router: Router) {\n    if (localStorage.getItem('id')) {\n      this.subscription = this.getCurrentUser(localStorage.getItem('id'))\n        .subscribe((data) => {\n          this.userId.next(data.user_id);\n          this.username.next(data.user_name);\n          this.role.next(data.role);\n          this.organizationId.next(data.organization);\n          this.organization.next(localStorage.getItem('organization'));\n          // TODO: update GET call to return organization's name\n          if (data.role === 'IM') {\n            this.turnOnOrgMode({organization_name: localStorage.getItem('organization'), ...data});\n          }\n        });\n    }\n  }\n\n  getOrgMode(): BehaviorSubject<boolean> {\n    return this.orgMode;\n  }\n\n  setOrgMode(state: boolean): void {\n    this.orgMode.next(state);\n  }\n\n  turnOnOrgMode(org): void {\n    localStorage.setItem('organization_id', org.organization);\n    localStorage.setItem('organization', org.organization_name);\n    this.organization.next(org.organization_name);\n    this.orgMode.next(true);\n    this.router.navigate(['dashboard']);\n  }\n\n  turnOffOrgMode(): void {\n    if (this.role.getValue() === 'SA') {\n      localStorage.removeItem('organization_id');\n      this.router.navigate(['manage-organizations']);\n      this.orgMode.next(false);\n      this.organization.next('');\n    } else {\n      this.router.navigate(['dashboard']);\n    }\n\n  }\n\n  register(body): Observable<any> {\n    return this.http.post(`${BASEURL}/user/`, body);\n  }\n\n  openRegister(body): Observable<any> {\n    return this.http.post(`${BASEURL}/open-registration/`, body);\n  }\n\n  login(body): Observable<any> {\n    return this.http.post(`${BASEURL}/login/`, body);\n  }\n\n  getCurrentUser(id): Observable<any> {\n    return this.http.get(`${BASEURL}/user/${id}/`);\n  }\n\n  setNext(nextUserId: any, nextUser: any, nextRole: any, nextOrgId: any, nextOrg: any): void {\n      this.userId.next(nextUserId);\n      this.username.next(nextUser);\n      this.role.next(nextRole);\n      this.organizationId.next(nextOrgId);\n      this.organization.next(nextOrg);\n\n      localStorage.setItem('id', nextUserId);\n  }\n\n  setLogOut(): void {\n    this.setNext('', '', '', '', '');\n    localStorage.removeItem('id');\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('role');\n    localStorage.removeItem('role');\n    localStorage.removeItem('organization');\n    localStorage.removeItem('organization_id');\n  }\n\n  OnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SidenavService } from 'src/app/services/sidenav.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent implements OnInit {\n  constructor(\n    private tokenService: TokenService,\n    private router: Router,\n    private sidenav: SidenavService,\n    private authService: AuthService\n  ) {}\n\n  isVisible = true;\n  @Output() drawerEvent = new EventEmitter<boolean>();\n  organization;\n  loggedInUser;\n  loggedInUserRole;\n  subscription;\n  orgModeSub;\n\n  orgMode: boolean;\n\n  ngOnInit(): void {\n    this.subscription = this.authService.sharedUser\n      .subscribe((data) => {\n          this.loggedInUser = data.username;\n          this.loggedInUserRole = data.role;\n          this.organization = data.org;\n      });\n    this.orgModeSub = this.authService.getOrgMode().subscribe(value => {\n      this.orgMode = value;\n    });\n  }\n\n  toggleDrawer(): void {\n    this.sidenav.toggle();\n  }\n\n  OnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<mat-toolbar class=\"tool-bar\">\n    <button mat-icon-button (click)=\"toggleDrawer()\">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <span class=\"spacer\"><h4 class=\"org\" *ngIf=\"orgMode\">{{organization}}</h4></span>\n</mat-toolbar>\n","import { env } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// Connection with the backend\nconst BASEURL = env.api_root;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ManageInventoryItemsService {\n  constructor(private http: HttpClient) {}\n\n  getAllItems(): Observable<any> {\n    return this.http.get(`${BASEURL}/item/`);\n  }\n}\n","// Managing tokens in the frontend using cookies\nimport { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenService {\n  constructor(private cookieService: CookieService) {}\n\n  // We set the token when we signup or login\n  SetToken(token): void {\n    this.cookieService.set('token', token);\n  }\n\n  // We get the token when we successfully signup or login\n  GetToken(): string {\n    return this.cookieService.get('token');\n  }\n\n  // We delete the token when the user logout\n  DeleteToken(): void {\n    this.cookieService.delete('token');\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ManageMembersService } from '../../services/manage-members.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-employee-settings',\n  templateUrl: './employee-settings.component.html',\n  styleUrls: ['./employee-settings.component.scss'],\n})\nexport class EmployeeSettingsComponent implements OnInit {\n  @Input() employee: User;\n  @Input() employeeCopy: User;\n  edit = false;\n  defaultPassword = '';\n  password: string = this.defaultPassword;\n  @Input() role: string;\n  @Input() isActive: string;\n  id: string;\n  isLoggedInUser = false;\n  body: any;\n\n  activeStates = [{ state: 'active' }, { state: 'disabled' }];\n  roles = [\n    { name: 'System Admin', abbrev: 'SA' },\n    { name: 'Inventory Manager', abbrev: 'IM' },\n    { name: 'Stock Keeper', abbrev: 'SK' },\n  ];\n\n  constructor(\n    private manageMembersService: ManageMembersService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    // If the ID changes in the route param then reload the component\n    this.activatedRoute.params.subscribe((routeParams) => {\n        this.id = routeParams.ID ? routeParams.ID : localStorage.getItem('id');\n        this.ngOnInit();\n    });\n  }\n\n  ngOnInit(): void {\n    this.getEmployee();\n\n    // Verifying that the logged in user is accessing his informations\n    if (this.id === localStorage.getItem('id')) {\n      this.isLoggedInUser = true;\n    }\n  }\n\n  getEmployee(): void {\n    this.manageMembersService.getEmployee(this.id).subscribe((employee) => {\n      this.employee = {\n        id: employee.id,\n        first_name: employee.first_name,\n        last_name: employee.last_name,\n        role: employee.role,\n        is_active: employee.is_active,\n        email: employee.email,\n      };\n\n      this.setSelectors();\n    });\n  }\n\n  setSelectors(): void {\n    this.isActive = this.employee.is_active ? 'active' : 'disabled';\n    this.roles.forEach((role) => {\n      if (role.abbrev === this.employee.role) {\n        this.role = role.name;\n      }\n    });\n  }\n\n  editMode(turnOn: boolean): void {\n    this.edit = turnOn;\n    if (!turnOn) {\n      this.submit();\n    }\n  }\n\n  submit(): void {\n    // update user info\n    this.employee.is_active = this.isActive === 'active';\n\n    this.roles.forEach((role) => {\n      if (role.name === this.role) {\n        this.employee.role = role.abbrev;\n      }\n    });\n\n    this.manageMembersService\n      .updateClientInfo(this.employee, this.id)\n      .subscribe((response) => {\n        location.reload();\n      });\n\n    // update user password\n    if (this.password.length > 0) {\n      this.body = {\n        password: this.password,\n      };\n      this.manageMembersService.updatePassword(this.body, this.id).subscribe(\n        (response) => {\n          location.reload();\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    }\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>{{isLoggedInUser? \"Profile\" : \"Employee\"}} Settings</mat-card-title>\n  </mat-card-header>\n  <mat-divider></mat-divider>\n    <mat-card-content>\n      <button mat-stroked-button id=\"signupbtn\" (click)=\"editMode(!edit)\" class=\"save\">\n        {{edit ? \"Save\": \"Edit\"}}</button><!-- if checks throws error then do not send data -->\n      <div class=\"centerMe\">\n        <img src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\" alt=\"Blank Display Pic\" width=\"100\" height=\"100\" />\n      </div>\n      <mat-grid-list cols=\"2\" rowHeight=\"38:9\">\n        <mat-grid-tile *ngIf=\"employee\">\n          <div class=\"form-group\">\n            <mat-label for=\"power\">First Name:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <input matInput id=\"firstname\" type=\"text\" [disabled]=true [value]=\"employee.first_name\"/>\n            </mat-form-field>\n          </div>\n\n        </mat-grid-tile>\n        <mat-grid-tile *ngIf=\"employee\">\n          <div class=\"form-group\">\n            <mat-label for=\"power\">E-mail address:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <input matInput id=\"email\" type=\"email\" placeholder=\"E-mail address\"\n                     [(ngModel)]=\"employee.email\" email [disabled]=\"!edit\"/>\n            </mat-form-field>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile *ngIf=\"employee\">\n          <div class=\"form-group\">\n            <mat-label for=\"lastname\">Last name:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <input matInput id=\"lastname\" type=\"text\" placeholder=\"Last name\"\n                     [disabled]=true [value]=\"employee.last_name\"/>\n            </mat-form-field>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <div class=\"form-group\">\n            <mat-label for=\"username\">Employee ID:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <input matInput id=\"user_name\" type=\"text\" placeholder=\"Employee ID\" [disabled]=\"!edit\"/>\n            </mat-form-field>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <div class=\"form-group\">\n            <mat-label for=\"pass-word\">Password:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <input matInput id=\"pass-word\" type=\"password\" placeholder=\"Password\"\n                     [(ngModel)]=\"password\" minlength=\"5\" [disabled]=\"!edit\"/>\n            </mat-form-field>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile *ngIf=\"!isLoggedInUser\">\n          <div class=\"form-group\">\n            <mat-label for=\"pass-word\">Role:</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <mat-select class=\"roleDropDown\" [(ngModel)]=\"role\" [disabled]=\"!edit\">\n                <mat-option *ngFor=\"let role of roles\" [value]=\"role.name\">\n                  {{ role.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </mat-grid-tile>\n        <mat-grid-tile *ngIf=\"!isLoggedInUser\">\n          <div class=\"form-group\">\n            <mat-label for=\"is-active\">Is Active</mat-label>\n            <mat-form-field appearance=\"outline\">\n              <mat-select class=\"statusDropDown\" id=\"active\" [(ngModel)]=\"isActive\" [disabled]=\"!edit\">\n                <mat-option *ngFor=\"let active of activeStates\" [value]=\"active.state\">\n                  {{active.state}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </mat-card-content>\n</mat-card>\n","/* https://angular.io/guide/http*/\n/* With interception, you declare interceptors that inspect and transform HTTP requests\nfrom your application to the server. The same interceptors may also inspect and transform the server's\nresponses on their way back to the application. Multiple interceptors form a forward-and-backward\nchain of request/response handlers. Interceptors can perform a variety of implicit tasks,\nfrom authentication to logging, in a routine, standard way, for every HTTP request/response.*/\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenService } from './token.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private tokenService: TokenService) {}\n\n  /* The intercept method transforms a request into an Observable that eventually\n  returns the HTTP response. In this sense, each interceptor is fully capable of\n  handling the request entirely by itself */\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // Return next.handle(req);\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: '',\n    };\n\n    const token = this.tokenService.GetToken(); // Getting the token\n\n    // If token is available in the cookie\n    if (token) {\n      // We set the Authorization header: token inside the object for every request\n      headersConfig.Authorization = `Token ${token}`;\n    }\n    const reqUpdated = req.clone({ setHeaders: headersConfig }); // We clone the request\n    return next.handle(reqUpdated); // We handle the cloned request\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { env } from './environments/environment';\n\nif (env.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}